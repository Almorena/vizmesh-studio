/**
 * Core type definitions for VizMesh Studio
 * AI-powered widget system
 */

import type { WidgetTheme } from "@/lib/widget-themes"

export interface Widget {
  id: string
  prompt: string // User's natural language request
  title: string
  dataSource: DataSource
  visualization: Visualization
  position: { x: number; y: number }
  size: { width: number; height: number }
  createdAt: string
  updatedAt: string
}

export interface DataSource {
  type: "provider" | "api" | "agent" | "static"
  id?: string // Reference to provider/api/agent
  config: Record<string, any>
  query?: string // AI-generated query logic
}

export interface Visualization {
  type: "chart" | "metric" | "table" | "custom"
  componentCode: string // React component generated by Claude
  props?: Record<string, any>
  theme?: WidgetTheme // Visual theme for the widget
}

export interface CanvasLayout {
  id: string
  name: string
  widgets: Widget[]
  createdAt: string
  updatedAt: string
}

// AI Generation types
export interface GenerateWidgetRequest {
  prompt: string
  availableDataSources?: DataSource[]
}

export interface GenerateWidgetResponse {
  widget: Omit<Widget, "id" | "createdAt" | "updatedAt" | "position" | "size">
  explanation: string
  suggestions: string[]
  widgetId?: string // Only present when editing an existing widget
}
